{"version":3,"sources":["store/state.ts","pages/create-task/subforms/Functional.tsx","pages/create-task/subforms/Variables.tsx","pages/create-task/subforms/Management.tsx","pages/create-task/subforms/Derivatives.tsx","pages/create-task/subforms/Method.tsx","pages/create-task/CreateTask.tsx","pages/history/History.tsx","App.tsx","serviceWorker.ts","store/createReducer.ts","store/task-reducer/functional-reducer.ts","store/task-reducer/variables-reducer.ts","store/task-reducer/management-reducer.ts","store/task-reducer/derivatives-reducer.ts","store/task-reducer/method-reducer.ts","store/task-reducer/index.ts","store/index.ts","index.tsx"],"names":["TaskStep","useStyles","makeStyles","theme","block","marginTop","spacing","connect","state","functional","editingTask","functionalStep","validity","validation","dispatch","updateFunctional","payload","type","updateConstant","constantIndex","prop","value","target","addConstant","removeConstant","_ref","classes","handleChange","key","Object","objectSpread","defineProperty","react_default","a","createElement","Paper","className","TextField","label","error","valid","passed","onChange","FormHelperText","FormControl","FormControlLabel","control","Checkbox","hasIntegralPart","t0","helperText","T","Typography","variant","Table","TableHead","TableRow","TableCell","TableBody","constants","map","constant","i","component","scope","concat","IconButton","onClick","Delete_default","Button","variables","variableStep","addVariable","updateVariable","removeVariable","handleVarChange","var","vars","index","variable","f","p","xt0","pT","disabled","length","tableHeader","maxWidth","minWidth","tkField","marginLeft","center","alignSelf","management","managementStep","addManager","updateManager","removeManager","updateDudv","j","manager","dudv","updateV","k","interval","v","updateTk","addParameter","removeParameter","parameter","addTimeSwitcher","removeTimeSwitcher","timeswitcher","u","s","row","tk","t","derivatives","derivativeStep","updateDfDx","fIndex","xIndex","dfdx","updateDfDu","uIndex","dfdu","method","methodStep","updateMethod","event","Select","name","MenuItem","step","descr","initialState","g","dgdu","dgdx","task","history","root","width","button","marginRight","actionsContainer","marginBottom","resetContainer","padding","updateValidity","reset","_React$useState","React","useState","_React$useState2","slicedToArray","activeStep","setActiveStep","steps","content","subforms_Functional","subforms_Variables","subforms_Management","subforms_Derivatives","subforms_Method","handleStep","validityStep","square","elevation","Stepper","nonLinear","orientation","Step","StepButton","disableRipple","StepLabel","StepContent","History","App","react_router_dom","src","alt","to","exact","activeClassName","react_router","path","CreateTask","Boolean","window","location","hostname","match","consumer","functional_reducer","FUNCTIONAL_UPDATE","action","every","CONSTANT_ADD","toConsumableArray","CONSTANT_UPDATE","slice","CONSTANT_REMOVE","filter","variables_reducer","VARIABLE_UPDATE","VARIABLE_ADD","allVars","newDfDx","Array","fill","newDfDu","VARIABLE_REMOVE","leftVars","management_reducer","MANAGER_ADD","withNewManager","m","MANAGER_UPDATE","updatingManager","withEdittedManager","MANAGER_REMOVE","withDelettedManager","DUDV_UPDATE","V_UPDATE","TK_UPDATE","PARAMETER_ADD","managerWithNewParameter","withNewParametr","PARAMETER_REMOVE","managerWithDelettingParameter","withDeletedParameter","TIMESWITCHER_ADD","mangerWithNewTimeSwitcher","withNewTimeSwitcher","TIMESWITCHER_REMOVE","managerWithDelettingTimeSwitcher","withDeletedTimeSwitcher","derivatives_reducer","DFDX_UPDATE","DFDU_UPDATE","method_reducer","METHOD_UPDATE","createReducer","functionalReducer","variablesReducer","managementReducer","derivativesReducer","methodReducer","VALIDITY_UPDATE","RESET","arguments","undefined","_unused","createStore","taskReducer","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3d29896.chunk.js","sourcesContent":["export interface IState {\n    editingTask: ITaskForm;\n    task: any;\n    history: any;\n}\n\nexport interface ITaskForm extends ITask {\n    validation: IValidation;\n}\n\nexport type IValidation = Record<keyof ITask, {\n    passed: boolean;\n    valid: boolean;\n}>;\n\nexport interface ITask {\n    functionalStep: IFunctional;\n    variableStep: IVariableStep;\n    managementStep: IManager[];\n    derivativeStep: IDerivative;\n    methodStep: IMethod;\n}\n\nexport enum TaskStep {\n    functionalStep,\n    variableStep,\n    managementStep,\n    derivativeStep,\n    methodStep,\n}\n\nexport interface IFunctional {\n    functional: string;\n    t0: number;\n    T: number;\n    constants: {key: string, value: number}[],\n    hasIntegralPart: boolean;\n}\n\nexport interface IVariableStep {\n    /** инфа о фазовых переменых и все что с ней связанно */\n    vars: IVariable[];\n    /** производная интегральной части по управлению.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретное управление для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdu?: string[][];\n    /** производная интегральной части по фазовой переменной.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретная фазовая переменная для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdx?: string[][];\n}\n\nexport interface IVariable {\n    /** производная фазовой переменной по времени */\n    f: string;\n    /** сопряженная переменная */\n    p: string;\n    /** начальное значение фазовой переменной */\n    xt0: number;\n    /** конечное значение сопраженной */\n    pT: number;\n    /** опциональная интегральная часть функции f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    g?: string;\n}\n\nexport const getEmptyVariable = (): IVariable => ({\n    f: '',\n    p: '',\n    xt0: 0,\n    pT: 1,\n    g: '',\n});\n\nexport interface IManager {\n    /** функция управления */\n    u: string;\n    /** массив значений параметров управления.\n     *  внешний массив это конкретный интервал времени,\n     *  а внутренний это значения параметров на этом интервале\n     */\n    v: number[][];\n    /** время точек переключения */\n    tk: number[];\n    /** производная управления по одному из ее параметров */\n    dudv: string[];\n}\n\nexport const getEmptyManager = (): IManager => ({\n    u: '',\n    v: [[0]],\n    tk: [],\n    dudv: ['']\n});\n\nexport interface IDerivative {\n    /** производная f по фазовой переменной.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретной фазовой переменной x по этой f\n     */\n    dfdx: string[][];\n    /** производная f по управлению.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретного управления u по этой f\n     *  (в первой версии приложения будет только одно управление!!)\n     */\n    dfdu: string[][];\n}\n\nexport interface IMethod {\n    /** название метода */\n    name: 'Newton' | 'Grad';\n    /** численная или аналитическая реализация этого метода */\n    type: 'digit' | 'anal';\n    /** шаг интегрирования */\n    step: number;\n    /** частота дискретизация для кеширования результатов */\n    descr: number;\n}\n\nexport const initialState: IState = {\n    editingTask: {\n        functionalStep: {\n            functional: '',\n            t0: 0,\n            T: 1,\n            constants: [],\n            hasIntegralPart: false\n\n        },\n        variableStep: {\n            vars: [getEmptyVariable()],\n            dgdu: [],\n            dgdx: []\n\n        },\n        managementStep: [getEmptyManager()],\n        derivativeStep: {\n            dfdu: [['']],\n            dfdx: [['']]\n        },\n        methodStep: {\n            name: 'Grad',\n            type: 'digit',\n            step: 1e-6,\n            descr: 40\n        },\n        validation: {\n            functionalStep: {\n                passed: false,\n                valid: false\n            },\n            variableStep: {\n                passed: false,\n                valid: false\n            },\n            managementStep: {\n                passed: false,\n                valid: false\n            },\n            derivativeStep: {\n                passed: false,\n                valid: false\n            },\n            methodStep: {\n                passed: false,\n                valid: true\n            },\n        }\n    },\n    task: null,\n    history: null,\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n    TextField, FormControl, FormControlLabel, Checkbox, FormHelperText, Paper,\n    Typography, makeStyles, Table, TableHead, TableRow, TableCell, TableBody, Button,\n    IconButton\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IFunctional, IValidation } from '../../../store/state';\n\nconst useStyles = makeStyles(theme => ({\n    block: {\n      marginTop: theme.spacing(4),\n    },\n  }));\n\n\ntype FunctionalComponent = React.FC<{\n    functional: IFunctional;\n    validity: IValidation['functionalStep'];\n    updateFunctional: (payload: IFunctional) => void;\n    updateConstant: (constantIndex: number, prop: 'key' | 'value') => (payload: any) => void;\n    addConstant: () => void;\n    removeConstant: (payload: number) => () => void;\n}>;\nconst Functional: FunctionalComponent = ({functional, validity, updateFunctional, updateConstant, addConstant, removeConstant}) => {\n        const classes = useStyles();\n        const handleChange = (key: keyof IFunctional) => (payload: any) => {\n            updateFunctional({\n                ...functional,\n                [key]: payload.target.value\n            });\n        };\n\n        return (\n            <Paper className=\"column Paper\">\n                <TextField\n                    label=\"Целевая функция\"\n                    error={!validity.valid && validity.passed && !functional.functional}\n                    onChange={handleChange('functional')}\n                    value={functional.functional}\n                />\n                {!validity.valid && validity.passed && !functional.functional && (\n                    <FormHelperText error={true}>Целевая функция должна быть указана</FormHelperText>\n                )}\n                <FormControl>\n                    <FormControlLabel\n                        control={\n                        <Checkbox value={functional.hasIntegralPart} onChange={handleChange('hasIntegralPart')}/>\n                        }\n                        label=\"Есть интегральная часть\"\n                    />\n                </FormControl>\n                <div className=\"row\">\n                    <TextField\n                        label=\"t0\"\n                        onChange={handleChange('t0')}\n                        type=\"number\"\n                        value={functional.t0}\n                        helperText=\"Начальный момент времени\"\n                    />\n                    <TextField\n                        label=\"T\"\n                        onChange={handleChange('T')}\n                        type=\"number\"\n                        value={functional.T}\n                        helperText=\"Конечный момент времени\"\n                    />\n                </div>\n                <Typography variant=\"h6\" className={classes.block}>\n                    Константы\n                </Typography>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Имя</TableCell>\n                            <TableCell>Значение</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {functional.constants.map((constant, i) => (\n                            <TableRow key={i}>\n                                <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                    <TextField\n                                        onChange={updateConstant(i, 'key')}\n                                        label={`Имя константы${i}`}\n                                        error={!validity.valid && validity.passed && !constant.key}\n                                        value={constant.key}/>\n                                    {!validity.valid && validity.passed && !constant.key && (\n                                        <FormHelperText error={true}>{`Укажите имя константы`}</FormHelperText>\n                                    )}\n                                </TableCell>\n                                <TableCell className=\"column\">\n                                    <TextField\n                                        onChange={updateConstant(i, 'value')}\n                                        label={`Значение константы${i}`}\n                                        error={!validity.valid && validity.passed && !constant.value}\n                                        type=\"number\"\n                                        value={constant.value}/>\n                                    {!validity.valid && validity.passed && !constant.value && (\n                                        <FormHelperText error={true}>{`Укажите значение константы`}</FormHelperText>\n                                    )}\n                                </TableCell>\n                                <TableCell className=\"column\">\n                                    <IconButton onClick={removeConstant(i)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Button onClick={addConstant}>\n                    Добавить константу\n                </Button>\n            </Paper>\n        );\n    }\n\n\n\nexport default connect(\n    (state: IState) => ({\n        functional: state.editingTask.functionalStep,\n        validity: state.editingTask.validation.functionalStep\n    }),\n    dispatch => ({\n        updateFunctional: (payload: IFunctional) => dispatch({ type: 'FUNCTIONAL_UPDATE', payload }),\n        updateConstant: (constantIndex: number, prop: 'key' | 'value') => (payload: any) => dispatch({ type: 'CONSTANT_UPDATE', payload: {\n            constantIndex,\n            prop,\n            value: payload.target.value\n        } }),\n        addConstant: () => dispatch({ type: 'CONSTANT_ADD' }),\n        removeConstant: (payload: number) => () => dispatch({ type: 'CONSTANT_REMOVE', payload })\n    })\n)(Functional);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, TextField, FormHelperText, Button, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IValidation, IVariable, IVariableStep } from '../../../store/state';\n\ntype VariablesComponent = React.FC<{\n    variables: IVariableStep;\n    validity: IValidation['variableStep'];\n    addVariable: () => void;\n    updateVariable: (payload: {var: IVariable; index: number}) => void;\n    removeVariable: (payload: number) => () => void;\n}>;\nconst Variables: VariablesComponent = ({variables, validity, addVariable, updateVariable, removeVariable}) => {\n    const handleVarChange = (key: keyof IVariable, i: number) => (payload: any) => updateVariable({\n        var: {\n            ...variables.vars[i],\n            [key]: payload.target.value\n        },\n        index: i\n    });\n    return (\n        <div className=\"column\">\n            {variables.vars.map((variable, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция фазовой переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.f}\n                        onChange={handleVarChange('f', i)}\n                        value={variable.f}\n                    />\n                    {!validity.valid && validity.passed && !variable.f && (\n                        <FormHelperText error={true}>{'Укажите функцию dx' + i + '/dt'}</FormHelperText>\n                    )}\n                    <TextField\n                        label={'Функция сопряженной переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.p}\n                        onChange={handleVarChange('p', i)}\n                        value={variable.p}\n                    />\n                    {!validity.valid && validity.passed && !variable.p && (\n                        <FormHelperText error={true}>{'Укажите функцию p' + i}</FormHelperText>\n                    )}\n                    <div className=\"row\">\n                        <TextField\n                            label=\"x(t0)\"\n                            onChange={handleVarChange('xt0', i)}\n                            type=\"number\"\n                            value={variable.xt0}\n                            helperText={'Начальной значение фазовой переменной ' + i}\n                        />\n                        <TextField\n                            label=\"p(T)\"\n                            onChange={handleVarChange('pT', i)}\n                            type=\"number\"\n                            value={variable.pT}\n                            helperText={'Конечное значение сопряженной переменной ' + i}\n                        />\n                    </div>\n                    <IconButton className=\"close-btn\" onClick={removeVariable(i)} disabled={variables.vars.length === 1}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Paper>\n            ))}\n            <Button onClick={addVariable}>\n                Добавить переменную\n            </Button>\n        </div>\n\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        variables: state.editingTask.variableStep,\n        validity: state.editingTask.validation.variableStep\n    }),\n    dispatch => ({\n        addVariable: () => dispatch({ type: 'VARIABLE_ADD' }),\n        updateVariable: (payload: {var: IVariable; index: number}) => dispatch({ type: 'VARIABLE_UPDATE', payload }),\n        removeVariable: (payload: number) => () => dispatch({ type: 'VARIABLE_REMOVE', payload }),\n    })\n)(Variables);","import { IManager, IState, IValidation } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Paper, IconButton, Table, TableHead, TableRow, TableCell, TableBody, TextField, makeStyles } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    tableHeader: {\n        maxWidth: '200px',\n        minWidth: '120px'\n    },\n    tkField: {\n        maxWidth: '80px',\n        marginLeft: '8px'\n    },\n    center: {\n        alignSelf: 'center'\n    }\n  }));\n\ntype ManagementType = React.FC<{\n    management: IManager[];\n    validity: IValidation['managementStep'];\n\n    addManager: () => void;\n    updateManager: (key: keyof IManager, i: number) => (payload: any) => void;\n    removeManager: (payload: number) => () => void;\n    updateDudv: (i: number, j: number) => (payload: any) => void;\n    updateV: (i: number, j: number, k: number) => (payload: any) => void;\n    updateTk: (i: number, k: number) => (payload: any) => void;\n\n    addParameter: (i: number) => () => void;\n    removeParameter: (i: number, j: number) => () => void;\n    addTimeSwitcher: (payload: number) => () => void;\n    removeTimeSwitcher: (i: number, j: number) => () => void;\n}>;\nconst Management: ManagementType = ({\n    management, validity,\n    addManager, updateManager, removeManager, updateDudv, updateV, updateTk,\n    addParameter, removeParameter,\n    addTimeSwitcher, removeTimeSwitcher\n}) => {\n    const classes = useStyles();\n    return (\n        <div className=\"column\">\n            {management.map((manager, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция управления ' + i}\n                        error={!validity.valid && validity.passed && !manager.u}\n                        onChange={updateManager('u', i)}\n                        value={manager.u}\n                        helperText={!validity.valid && validity.passed && !manager.u && `Укажите функцию u ${i}`}\n                    />\n                    <div className=\"table-scroll-x\">\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell />\n                                    {manager.dudv.map((v, j) => (\n                                        <TableCell key={j}>\n                                            <div className={classes.tableHeader}>\n                                                <span>V{j}</span>\n                                                <IconButton\n                                                    onClick={removeParameter(i, j)}\n                                                    disabled={manager.dudv.length === 1}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            </div>\n                                        </TableCell>\n                                    )) }\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        du/dv\n                                    </TableCell>\n                                    {manager.dudv.map((v, s) => (\n                                        <TableCell key={s}>\n                                            <TextField\n                                                onChange={updateDudv(i, s)}\n                                                label={`du${i}/dv${s}`}\n                                                error={!validity.valid && validity.passed && !manager.dudv[s]}\n                                                helperText={!validity.valid && validity.passed && !manager.dudv[s] && `Укажите производную du${i}/dv${s}`}\n                                                value={v}/>\n                                        </TableCell>\n                                    )) }\n                                    <TableCell />\n                                </TableRow>\n                                {manager.v.map((row, k) => (\n                                    <TableRow key={k}>\n                                        <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                            <span>\n                                                t{k} - {k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}\n                                            </span>\n                                        </TableCell>\n                                        {row.map((v, s) => (\n                                            <TableCell key={s}>\n                                                <TextField\n                                                    type=\"number\"\n                                                    label={`Значение v${s}`}\n                                                    helperText={`на интервале t${k} - ${k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}`}\n                                                    onChange={updateV(i, k, s)}\n                                                    value={v}/>\n                                            </TableCell>\n                                        )) }\n                                        <TableCell>\n                                            <IconButton onClick={removeTimeSwitcher(i, k)} disabled={manager.v.length === 1}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n\n                    {!!(manager.tk.length) && (\n                        <div className=\"table-scroll-x\">\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell></TableCell>\n                                        <TableCell>\n                                            Момент переключения\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {manager.tk.map((t, k) => (\n                                        <TableRow key={k}>\n                                            <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                                <span>\n                                                    {'t' + (k + 1)}\n                                                </span>\n                                            </TableCell>\n                                            <TableCell>\n                                                <TextField\n                                                    type=\"number\"\n                                                    className={classes.tkField}\n                                                    onChange={updateTk(i, k)}\n                                                    value={t}/>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.center + ' row'}>\n                        <Button onClick={addTimeSwitcher(i)}>\n                            Добавить момент переключения\n                        </Button>\n                        <Button onClick={addParameter(i)}>\n                            Добавить параметр управления\n                        </Button>\n                    </div>\n\n\n                    {/* <IconButton className=\"close-btn\" onClick={removeManager(i)} disabled={management.length === 1}>\n                        <DeleteIcon />\n                    </IconButton> */}\n                </Paper>\n            ))}\n            {/* <Button onClick={addManager}>\n                Добавить управление\n            </Button> */}\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        management: state.editingTask.managementStep,\n        validity: state.editingTask.validation.managementStep\n    }),\n    dispatch => ({\n        addManager: () => dispatch({ type: 'MANAGER_ADD' }),\n        updateManager: (key: keyof IManager, i: number) => (payload: any) => dispatch({\n            type: 'MANAGER_UPDATE',\n            payload: {\n                key,\n                value: payload.target.value,\n                index: i\n            }\n        }),\n        removeManager: (payload: number) => () => dispatch({ type: 'MANAGER_REMOVE', payload }),\n        updateDudv: (i: number, j: number) => (payload: any) => dispatch({\n            type: 'DUDV_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                dudv: j\n            }\n        }),\n        updateV: (i: number, j: number, k: number) => (payload: any) => dispatch({\n            type: 'V_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: j,\n                v: k\n            }\n        }),\n        updateTk: (i: number, k: number) => (payload: any) => dispatch({\n            type: 'TK_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: k,\n            }\n        }),\n\n        addParameter: (payload: number) => () => dispatch({ type: 'PARAMETER_ADD', payload }),\n        removeParameter: (i: number, j: number) => () => dispatch({ type: 'PARAMETER_REMOVE', payload: {manager: i, parameter: j} }),\n        addTimeSwitcher: (payload: number) => () => dispatch({ type: 'TIMESWITCHER_ADD', payload }),\n        removeTimeSwitcher: (i: number, j: number) => () => dispatch({ type: 'TIMESWITCHER_REMOVE', payload: {manager: i, timeswitcher: j} }),\n    })\n)(Management);","import { IManager, IState, IValidation, IVariableStep, IDerivative } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TextField, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    tableHeader: {\n        maxWidth: '200px',\n        minWidth: '120px'\n    }\n  }));\n\ntype DerivativesType =  React.FC<{\n    variables: IVariableStep,\n    management: IManager[],\n    derivatives: IDerivative,\n    validity: IValidation['derivativeStep'];\n    updateDfDx: (fIndex: number, xIndex: number) => (dfdx: any) => void;\n    updateDfDu: (fIndex: number, uIndex: number) => (dfdu: any) => void;\n}>;\nconst Derivatives: DerivativesType = ({variables, management, derivatives, validity, updateDfDx, updateDfDu}) => {\n    const classes = useStyles();\n    return (\n        <div className=\"column\">\n            <Paper className=\"Paper\">\n                <div className=\"table-scroll-x\">\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {variables.vars.map((v, i) => (\n                                    <TableCell key={i} className={classes.tableHeader}>\n                                        f{i}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {variables.vars.map((v, i) => (\n                                <TableRow key={i}>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                        <span>\n                                            x{i}\n                                        </span>\n                                    </TableCell>\n                                    {\n                                        derivatives.dfdx[i].map((dfdx, k) => (\n                                            <TableCell key={k} className=\"column\">\n                                                <TextField\n                                                    onChange={updateDfDx(i, k)}\n                                                    label={`df${i}/dx${k}`}\n                                                    error={!validity.valid && validity.passed && !dfdx}\n                                                    helperText={!validity.valid && validity.passed && !dfdx && `Укажите функцию df${i}/dx${k}`}\n                                                    value={dfdx}/>\n                                            </TableCell>\n                                        )\n                                    )}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n            </Paper>\n\n            <Paper className=\"Paper\">\n                <div className=\"table-scroll-x\">\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {variables.vars.map((v, i) => (\n                                    <TableCell key={i} className={classes.tableHeader}>\n                                        f{i}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {management.map((v, k) => (\n                                <TableRow key={k}>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                        <span>\n                                            u{k}\n                                        </span>\n                                    </TableCell>\n                                    {\n                                        variables.vars.map((v, i) => (\n                                            <TableCell key={i} className=\"column\">\n                                                <TextField\n                                                    onChange={updateDfDu(i, k)}\n                                                    label={`df${i}/du${k}`}\n                                                    error={!validity.valid && validity.passed && !derivatives.dfdu[i][k]}\n                                                    helperText={!validity.valid && validity.passed && !derivatives.dfdu[i][k] && `Укажите функцию df${i}/du${k}`}\n                                                    value={derivatives.dfdu[i][k]}/>\n                                            </TableCell>\n                                        )\n                                    )}\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        variables: state.editingTask.variableStep,\n        management: state.editingTask.managementStep,\n        derivatives: state.editingTask.derivativeStep,\n        validity: state.editingTask.validation.derivativeStep\n    }),\n    dispatch => ({\n        updateDfDx: (fIndex: number, xIndex: number) => (payload: any) => dispatch({ type: 'DFDX_UPDATE', payload: {\n            fIndex,\n            xIndex,\n            dfdx: payload.target.value\n        } }),\n        updateDfDu: (fIndex: number, uIndex: number) => (payload: any) => dispatch({ type: 'DFDU_UPDATE', payload: {\n            fIndex,\n            uIndex,\n            dfdu: payload.target.value\n        }}),\n    })\n)(Derivatives);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, Select, MenuItem, TextField } from '@material-ui/core';\nimport { IState, IMethod } from '../../../store/state';\n\n// const useStyles = makeStyles(theme => ({\n//     block: {\n//       marginTop: theme.spacing(4),\n//     },\n// }));\n\ntype MethodComponent = React.FC<{\n    method: IMethod;\n    updateMethod: (key: keyof IMethod) => (event: any) => void;\n}>;\nconst Method: MethodComponent = ({method, updateMethod}) => {\n    return (\n        <Paper className=\"column Paper\">\n            <Select\n                value={method.name}\n                onChange={updateMethod('name')}>\n                <MenuItem value={'Newton'}>Метод Ньютона</MenuItem>\n                <MenuItem value={'Grad'}>Метод градиентного спуска</MenuItem>\n            </Select>\n            <Select\n                value={method.type}\n                onChange={updateMethod('type')}>\n                <MenuItem value={'digit'}>Численный</MenuItem>\n                <MenuItem value={'anal'}>Аналитический</MenuItem>\n            </Select>\n            <div className=\"row\">\n                <TextField\n                    label={'Шаг интегрирования'}\n                    onChange={updateMethod('step')}\n                    type=\"number\"\n                    value={method.step}\n                />\n                <TextField\n                    label={'Частота дискретизация'}\n                    onChange={updateMethod('descr')}\n                    type=\"number\"\n                    value={method.descr}\n                    helperText=\"для кеширования результатов\"\n                />\n            </div>\n        </Paper>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        method: state.editingTask.methodStep,\n    }),\n    dispatch => ({\n        updateMethod: (key: keyof IMethod) => (event: any) => dispatch({ type: 'METHOD_UPDATE', payload: {\n            key,\n            value: event.target.value\n        } }),\n    })\n)(Method);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { StepButton, StepLabel } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport Functional from './subforms/Functional';\nimport Variables from './subforms/Variables';\nimport Management from './subforms/Management';\nimport Derivatives from './subforms/Derivatives';\nimport Method from './subforms/Method';\nimport { IState, IValidation, TaskStep } from '../../store/state';\nimport { IValidityUpdate } from '../../store/task-reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n    maxWidth: '720px'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\n        {\n            label: 'Целевая функция',\n            content: <Functional/>\n        },\n        {\n            label: 'Фазовые и сопряженные переменные',\n            content: <Variables/>\n        },\n        {\n            label: 'Структура управления',\n            content: <Management/>\n        },\n        {\n            label: 'Производные',\n            content: <Derivatives/>\n        },\n        {\n            label: 'Конфигурация метода',\n            content: <Method/>\n        }\n    ];\n}\n\ntype CreateTaskType = React.FC<{validity: IValidation, updateValidity: (payload: IValidityUpdate) => void, reset: () => void}>;\nconst CreateTask: CreateTaskType = ({validity, updateValidity, reset}) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(3);\n    const steps = getSteps();\n\n    // Перемещение по шагам\n    const handleStep = (step: number) => () => {\n        if (step !== activeStep) {\n            const validityStep = validity[TaskStep[activeStep] as keyof IValidation];\n            updateValidity({\n                key: TaskStep[activeStep],\n                value: {\n                    ...validityStep,\n                    passed: true\n                }\n            })\n            setActiveStep(step);\n        }\n    };\n    // Сброс формы\n    const handleReset = () => {\n        setActiveStep(0);\n        reset();\n    };\n    const handleRun = () => {};\n    const handleImport = () => {};\n    const handleExport = () => {};\n\n    return (\n      <div className={classes.root}>\n        <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography><span>Пожалуйста, заполните условия задачи или импортируйте из csv.</span></Typography>\n            <Button onClick={handleImport} className={classes.button} disabled={true}>\n                Импорт из csv\n            </Button>\n            <Button onClick={handleExport} className={classes.button} disabled={true}>\n                Экспорт в csv\n            </Button>\n            <Button onClick={handleReset} className={classes.button}>\n                Сбросить\n            </Button>\n            <Button onClick={handleRun} className={classes.button} disabled={true}>\n                Запустить решение\n            </Button>\n        </Paper>\n        <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => {\n              const validityStep = validity[TaskStep[index] as keyof IValidation];\n              return (\n            <Step key={step.label} >\n                <StepButton onClick={handleStep(index)} disableRipple>\n                    <StepLabel error={!validityStep.valid && validityStep.passed}>{step.label}</StepLabel>\n                </StepButton>\n                <StepContent>\n                    {step.content}\n                    <div className={classes.actionsContainer}>\n                        {/* <div>\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleStep(index - 1)}\n                                className={classes.button}\n                            >\n                                Перейти к предыдущему шагу\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleStep(index + 1)}\n                                className={classes.button}\n                                >\n                                {activeStep === steps.length - 1 ? 'Завершить' : 'Перейти к следующему шагу'}\n                            </Button>\n                        </div> */}\n                    </div>\n                </StepContent>\n            </Step>\n          )})}\n        </Stepper>\n        {activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n                <Typography><span>Все данные введены.</span></Typography>\n            </Paper>\n        )}\n      </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        validity: state.editingTask.validation\n    }),\n    dispatch => ({\n        updateValidity: (payload: IValidityUpdate) => dispatch({ type: 'VALIDITY_UPDATE', payload }),\n        reset: () => dispatch({ type: 'RESET' }),\n    })\n)(CreateTask);","const History: React.FC = () => {\n    return null;\n}\n\nexport default History;","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport CreateTask from './pages/create-task/CreateTask';\nimport History from './pages/history/History';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div>\n        <div className=\"App-header\">\n          <div className=\"App-header-logo\">\n            <img src=\"/smart-control-logo.png\" alt=\"\"/>\n          </div>\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact className=\"App-link\" activeClassName=\"App-link_active\">Создать задачу</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/history\" className=\"App-link\" activeClassName=\"App-link_active\">История задач</NavLink>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"App-outlet\">\n          <Route exact path=\"/\" component={CreateTask} />\n          {/* <Route path=\"/about\" component={About} /> */}\n          <Route path=\"/topics\" component={History} />\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { initialState, IState } from './state';\nimport { Reducer } from 'redux';\n\nexport default (consumer: any): Reducer<IState> => (state = initialState, action) => {\n    try {\n        return consumer[action.type](state, action.payload);\n    } catch {\n        return state;\n    }\n};\n","import { IState, IFunctional } from '../state';\n\nexport default {\n    FUNCTIONAL_UPDATE(state: IState, action: IFunctional) {\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...action,\n                    t0: action.t0 || 0,\n                    T: action.T || 1,\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: !!((action as IFunctional).functional) &&\n                            state.editingTask.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_ADD(state: IState) {\n        const constants = [\n            ...state.editingTask.functionalStep.constants,\n            {key: '', value: ''}\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...state.editingTask.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: false\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_UPDATE(state: IState, payload: {\n        constantIndex: number,\n        prop: 'key' | 'value',\n        value: string\n    }) {\n        const constants = [\n            ...state.editingTask.functionalStep.constants.slice(0, payload.constantIndex),\n            {...state.editingTask.functionalStep.constants[payload.constantIndex], [payload.prop]: payload.value},\n            ...state.editingTask.functionalStep.constants.slice(payload.constantIndex + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...state.editingTask.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: state.editingTask.functionalStep.functional &&\n                            state.editingTask.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    },\n    CONSTANT_REMOVE(state: IState, payload: number) {\n        const constants = state.editingTask.functionalStep.constants.filter((v, i) => i !== payload);\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                functionalStep: {\n                    ...state.editingTask.functionalStep,\n                    constants: constants\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    functionalStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: state.editingTask.functionalStep.functional &&\n                            state.editingTask.functionalStep.constants.every(constant => !!(constant.key && constant.value))\n                    }\n                }\n            },\n        };\n    }\n}","import { IState, IVariable, getEmptyVariable } from '../state';\n\nexport default {\n    VARIABLE_UPDATE(state: IState, action: {var: IVariable; index: number}) {\n        const vars = [\n            ...state.editingTask.variableStep.vars.slice(0, action.index),\n            {\n                ...action.var,\n                t0: action.var.xt0 || 0,\n                T: action.var.pT || 1,\n            },\n            ...state.editingTask.variableStep.vars.slice(action.index + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                variableStep: {\n                    vars,\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: vars.every(v => !!(v.f && v.p))\n                    }\n                }\n            }\n        }\n    },\n    VARIABLE_ADD(state: IState) {\n        const allVars = [\n            ...state.editingTask.variableStep.vars,\n            getEmptyVariable(),\n        ];\n        const newDfDx = [\n            ...state.editingTask.derivativeStep.dfdx.map(row => [...row, '']),\n            Array(allVars.length).fill('')\n        ];\n        const newDfDu = [\n            ...state.editingTask.derivativeStep.dfdu,\n            Array(state.editingTask.managementStep.length).fill('')\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                variableStep: {\n                    vars: allVars\n                },\n                derivativeStep: {\n                    dfdx: newDfDx,\n                    dfdu: newDfDu\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: allVars.every(v => !!(v.f && v.p))\n                    },\n                    derivativeStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: false\n                    }\n                }\n            }\n        };\n    },\n    VARIABLE_REMOVE(state: IState, action: number) {\n        const leftVars = [\n            ...state.editingTask.variableStep.vars.slice(0, action),\n            ...state.editingTask.variableStep.vars.slice(action + 1),\n        ];\n        const newDfDx = state.editingTask.derivativeStep.dfdx\n            .filter((row, i) => i !== action)\n            .map((row, i) => row.filter((dfdx, i) => i !== action));\n\n        const newDfDu = state.editingTask.derivativeStep.dfdu\n            .filter((row, i) => i !== action);\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                variableStep: {\n                    vars: leftVars\n                },\n                derivativeStep: {\n                    dfdx: newDfDx,\n                    dfdu: newDfDu\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: leftVars.every(v => !!(v.f && v.p))\n                    },\n                    derivativeStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: newDfDx.every(row => row.every(Boolean)) && newDfDu.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        };\n    }\n}","import { IState, IFunctional, getEmptyManager, IManager } from '../state';\n\nexport default {\n    MANAGER_ADD(state: IState, action: IFunctional) {\n        const withNewManager = [\n            ...state.editingTask.managementStep,\n            getEmptyManager()\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withNewManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withNewManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    MANAGER_UPDATE(state: IState, action: {\n        key: keyof IManager,\n        value: any,\n        index: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.index];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.index),\n            {\n                ...updatingManager,\n                [action.key]: action.value\n            },\n            ...state.editingTask.managementStep.slice(action.index + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    MANAGER_REMOVE(state: IState, action: number) {\n        const withDelettedManager = state.editingTask.managementStep.filter((m, i) => i !== action);\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withDelettedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withDelettedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    DUDV_UPDATE(state: IState, action: {\n        value: string,\n        manager: number,\n        dudv: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                dudv: [\n                    ...updatingManager.dudv.slice(0, action.dudv),\n                    action.value,\n                    ...updatingManager.dudv.slice(action.dudv + 1),\n                ]\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    V_UPDATE(state: IState, action: {\n        value: number,\n        manager: number,\n        interval: number,\n        v: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                v: [\n                    ...updatingManager.v.slice(0, action.interval),\n                    [\n                        ...updatingManager.v[action.interval].slice(0, action.v),\n                        action.value || 0,\n                        ...updatingManager.v[action.interval].slice(action.v + 1),\n                    ],\n                    ...updatingManager.v.slice(action.interval + 1),\n                ]\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    TK_UPDATE(state: IState, action: {\n        value: number,\n        manager: number,\n        interval: number\n    }) {\n        const updatingManager = state.editingTask.managementStep[action.manager];\n        const withEdittedManager = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...updatingManager,\n                tk: [\n                    ...updatingManager.tk.slice(0, action.interval),\n                    action.value || 0,\n                    ...updatingManager.tk.slice(action.interval + 1),\n                ]\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withEdittedManager,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withEdittedManager.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        }\n    },\n    PARAMETER_ADD(state: IState, action: number) {\n        const managerWithNewParameter = state.editingTask.managementStep[action];\n        const withNewParametr = [\n            ...state.editingTask.managementStep.slice(0, action),\n            {\n                ...managerWithNewParameter,\n                v: managerWithNewParameter.v.map(interval => [...interval, 0]),\n                dudv: [...managerWithNewParameter.dudv, '']\n            },\n            ...state.editingTask.managementStep.slice(action + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withNewParametr,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withNewParametr.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    PARAMETER_REMOVE(state: IState, action:  {manager: number, parameter: number}) {\n        const managerWithDelettingParameter = state.editingTask.managementStep[action.manager];\n        const withDeletedParameter = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...managerWithDelettingParameter,\n                v: managerWithDelettingParameter.v.map(interval => interval.filter((v, i) => i !== action.parameter)),\n                dudv: managerWithDelettingParameter.dudv.filter((v, i) => i !== action.parameter)\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withDeletedParameter,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withDeletedParameter.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    TIMESWITCHER_ADD(state: IState, action: number) {\n        const mangerWithNewTimeSwitcher = state.editingTask.managementStep[action];\n        const withNewTimeSwitcher = [\n            ...state.editingTask.managementStep.slice(0, action),\n            {\n                ...mangerWithNewTimeSwitcher,\n                v: [...mangerWithNewTimeSwitcher.v, Array(mangerWithNewTimeSwitcher.dudv.length).fill(0)],\n                tk: [...mangerWithNewTimeSwitcher.tk, 0]\n            },\n            ...state.editingTask.managementStep.slice(action + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withNewTimeSwitcher,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withNewTimeSwitcher.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    },\n    TIMESWITCHER_REMOVE(state: IState, action: {manager: number, timeswitcher: number}) {\n        const managerWithDelettingTimeSwitcher = state.editingTask.managementStep[action.manager];\n        const withDeletedTimeSwitcher = [\n            ...state.editingTask.managementStep.slice(0, action.manager),\n            {\n                ...managerWithDelettingTimeSwitcher,\n                v: managerWithDelettingTimeSwitcher.v.filter((interval, i) => i !== action.timeswitcher),\n                tk: managerWithDelettingTimeSwitcher.tk.slice(0, managerWithDelettingTimeSwitcher.tk.length - 1)\n            },\n            ...state.editingTask.managementStep.slice(action.manager + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                managementStep: withDeletedTimeSwitcher,\n                validation: {\n                    ...state.editingTask.validation,\n                    variableStep: {\n                        ...state.editingTask.validation.managementStep,\n                        valid: withDeletedTimeSwitcher.every(m => !!(\n                            m.u && m.dudv.every(Boolean)\n                        ))\n                    }\n                }\n            }\n        };\n    }\n}\n\n","import { IState } from '../state';\n\nexport default {\n    DFDX_UPDATE(state: IState, action: {\n        fIndex: number,\n        xIndex: number,\n        dfdx: string\n    }) {\n        const derivatives = [\n            ...state.editingTask.derivativeStep.dfdx.slice(0, action.fIndex),\n            [\n                ...state.editingTask.derivativeStep.dfdx[action.fIndex].slice(0, action.xIndex),\n                action.dfdx,\n                ...state.editingTask.derivativeStep.dfdx[action.fIndex].slice(action.xIndex + 1),\n            ],\n            ...state.editingTask.derivativeStep.dfdx.slice(action.fIndex + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                derivativeStep: {\n                    ...state.editingTask.derivativeStep,\n                    dfdx: derivatives\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    derivativeStep: {\n                        ...state.editingTask.validation.derivativeStep,\n                        valid: derivatives.every(row => row.every(Boolean)) &&\n                            state.editingTask.derivativeStep.dfdu.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        }\n    },\n    DFDU_UPDATE(state: IState, action: {\n        fIndex: number,\n        uIndex: number,\n        dfdu: string\n    }) {\n        const derivatives = [\n            ...state.editingTask.derivativeStep.dfdu.slice(0, action.fIndex),\n            [\n                ...state.editingTask.derivativeStep.dfdu[action.fIndex].slice(0, action.uIndex),\n                action.dfdu,\n                ...state.editingTask.derivativeStep.dfdu[action.fIndex].slice(action.uIndex + 1),\n            ],\n            ...state.editingTask.derivativeStep.dfdu.slice(action.fIndex + 1),\n        ];\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                derivativeStep: {\n                    ...state.editingTask.derivativeStep,\n                    dfdu: derivatives\n                },\n                validation: {\n                    ...state.editingTask.validation,\n                    derivativeStep: {\n                        ...state.editingTask.validation.functionalStep,\n                        valid: derivatives.every(row => row.every(Boolean)) &&\n                            state.editingTask.derivativeStep.dfdx.every(row => row.every(Boolean))\n                    }\n                }\n            }\n        };\n    }\n}","import { IState, IMethod } from '../state';\n\nexport default {\n    METHOD_UPDATE(state: IState, action: {key: keyof IMethod; value: any;}) {\n        return {\n            ...state,\n            editingTask: {\n                ...state.editingTask,\n                methodStep: {\n                    ...state.editingTask.methodStep,\n                    [action.key]: action.value\n                },\n            },\n        };\n    },\n}","import createReducer from '../createReducer';\nimport functionalReducer from './functional-reducer';\nimport variablesReducer from './variables-reducer';\nimport managementReducer from './management-reducer';\nimport { IState, initialState, IValidation } from '../state';\nimport derivativesReducer from './derivatives-reducer';\nimport methodReducer from './method-reducer';\n\nexport default createReducer({\n    ...functionalReducer,\n    ...variablesReducer,\n    ...managementReducer,\n    ...derivativesReducer,\n    ...methodReducer,\n    ...{\n        VALIDITY_UPDATE(state: IState, action: IValidityUpdate){\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    validation: {\n                        ...state.editingTask.validation,\n                        [action.key]: action.value\n                    }\n                }\n            }\n        },\n        RESET(state: IState) {\n            return {\n                ...state,\n                editingTask: initialState.editingTask\n            }\n        },\n\n    }\n});\n\nexport interface IValidityUpdate {\n    key: string;\n    value: IState['editingTask']['validation'][keyof IValidation];\n}","import { createStore } from 'redux';\nimport taskReducer from './task-reducer';\n\n// const rootReducer = combineReducers({\n//   history: historyReducer,\n//   editingForm: taskReducer\n// });\n\nexport default createStore(taskReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}