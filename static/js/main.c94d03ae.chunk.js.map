{"version":3,"sources":["store/state.ts","pages/create-task/subforms/Functional.tsx","pages/create-task/subforms/Variables.tsx","pages/create-task/subforms/Management.tsx","pages/create-task/subforms/Derivatives.tsx","pages/create-task/subforms/Method.tsx","pages/create-task/CreateTask.tsx","pages/history/History.tsx","App.tsx","serviceWorker.ts","store/index.ts","store/task-reducer.ts","index.tsx"],"names":["TaskStep","connect","state","functional","editingTask","functionalStep","validity","validation","dispatch","updateFunctional","payload","type","_ref","handleChange","key","Object","objectSpread","defineProperty","target","value","react_default","a","createElement","className","TextField","label","error","valid","passed","onChange","FormHelperText","FormControl","FormControlLabel","control","Checkbox","hasIntegralPart","t0","T","variables","variableStep","addVariable","updateVariable","removeVariable","handleVarChange","i","var","vars","index","map","variable","Paper","f","p","xt0","pT","IconButton","onClick","disabled","length","Delete_default","Button","useStyles","makeStyles","theme","tableHeader","maxWidth","tkField","marginLeft","management","managementStep","addManager","updateManager","removeManager","updateDudv","j","manager","dudv","updateV","k","interval","v","updateTk","addParameter","removeParameter","parameter","addTimeSwitcher","removeTimeSwitcher","timeswitcher","classes","u","Table","TableHead","TableRow","TableCell","TableBody","component","scope","s","row","concat","tk","t","Derivatives","Method","initialState","constants","g","dgdu","dgdx","derivativeStep","dfdu","dfdx","methodStep","name","step","descr","task","history","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","updateValidity","reset","_React$useState","React","useState","_React$useState2","slicedToArray","activeStep","setActiveStep","steps","content","subforms_Functional","subforms_Variables","subforms_Management","subforms_Derivatives","subforms_Method","handleStep","validityStep","square","elevation","Typography","Stepper","nonLinear","orientation","Step","StepButton","disableRipple","StepLabel","StepContent","History","App","react_router_dom","src","alt","to","exact","activeClassName","react_router","path","CreateTask","Boolean","window","location","hostname","match","createStore","arguments","undefined","action","updatingVar","toConsumableArray","slice","every","allVars","leftVars","withNewManager","m","updatingManager","withEdittedManager","withDelettedManager","filter","managerWithNewParameter","withNewParametr","managerWithDelettingParameter","withDeletedParameter","mangerWithNewTimeSwitcher","withNewTimeSwitcher","Array","fill","managerWithDelettingTimeSwitcher","withDeletedTimeSwitcher","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c94d03ae.chunk.js","sourcesContent":["export interface IState {\n    editingTask: ITaskForm;\n    task: any;\n    history: any;\n}\n\nexport interface ITaskForm extends ITask {\n    validation: IValidation;\n}\n\nexport type IValidation = Record<keyof ITask, {\n    passed: boolean;\n    valid: boolean;\n}>;\n\nexport interface ITask {\n    functionalStep: IFunctional;\n    variableStep: IVariableStep;\n    managementStep: IManager[];\n    derivativeStep: IDerivative;\n    methodStep: IMethod;\n}\n\nexport enum TaskStep {\n    functionalStep,\n    variableStep,\n    managementStep,\n    derivativeStep,\n    methodStep,\n}\n\nexport interface IFunctional {\n    functional: string;\n    t0: number;\n    T: number;\n    constants: {\n        [key: string]: number;\n    },\n    hasIntegralPart: boolean;\n}\n\nexport interface IVariableStep {\n    /** инфа о фазовых переменых и все что с ней связанно */\n    vars: IVariable[];\n    /** производная интегральной части по управлению.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретное управление для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdu?: string[][];\n    /** производная интегральной части по фазовой переменной.\n     *  внешний массив это одна из интегральных частей конкретной f,\n     *  внутренний массив это конкретная фазовая переменная для этой f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    dgdx?: string[][];\n}\n\nexport interface IVariable {\n    /** производная фазовой переменной по времени */\n    f: string;\n    /** сопряженная переменная */\n    p: string;\n    /** начальное значение фазовой переменной */\n    xt0: number;\n    /** конечное значение сопраженной */\n    pT: number;\n    /** опциональная интегральная часть функции f.\n     *  Нужно только если мы решаем задачу ИДУ (задачу с интегро дифференциальной связью)!!!\n     */\n    g?: string;\n}\n\nexport const getEmptyVariable = (): IVariable => ({\n    f: '',\n    p: '',\n    xt0: 0,\n    pT: 1,\n    g: '',\n});\n\nexport interface IManager {\n    /** функция управления */\n    u: string;\n    /** массив значений параметров управления.\n     *  внешний массив это конкретный интервал времени,\n     *  а внутренний это значения параметров на этом интервале\n     */\n    v: number[][];\n    /** время точек переключения */\n    tk: number[];\n    /** производная управления по одному из ее параметров */\n    dudv: string[];\n}\n\nexport const getEmptyManager = (): IManager => ({\n    u: '',\n    v: [[0]],\n    tk: [],\n    dudv: ['']\n});\n\nexport interface IDerivative {\n    /** производная f по фазовой переменной.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретной фазовой переменной x по этой f\n     */\n    dfdx: string[][];\n    /** производная f по управлению.\n     *  внешний массив - это функции f,\n     *  внутренний это производная конкретного управления u по этой f\n     *  (в первой версии приложения будет только одно управление!!)\n     */\n    dfdu: string[][];\n}\n\nexport interface IMethod {\n    /** название метода */\n    name: 'Newton' | 'Grad';\n    /** численная или аналитическая реализация этого метода */\n    type: 'digit' | 'anal';\n    /** шаг интегрирования */\n    step: number;\n    /** частота дискретизация для кеширования результатов */\n    descr: number;\n}\n\nexport const initialState: IState = {\n    editingTask: {\n        functionalStep: {\n            functional: '',\n            t0: 0,\n            T: 1,\n            constants: {},\n            hasIntegralPart: false\n\n        },\n        variableStep: {\n            vars: [getEmptyVariable()],\n            dgdu: [],\n            dgdx: []\n\n        },\n        managementStep: [getEmptyManager()],\n        derivativeStep: {\n            dfdu: [],\n            dfdx: []\n        },\n        methodStep: {\n            name: 'Grad',\n            type: 'digit',\n            step: 1e-6,\n            descr: 40\n        },\n        validation: {\n            functionalStep: {\n                passed: false,\n                valid: false\n            },\n            variableStep: {\n                passed: false,\n                valid: false\n            },\n            managementStep: {\n                passed: false,\n                valid: false\n            },\n            derivativeStep: {\n                passed: false,\n                valid: false\n            },\n            methodStep: {\n                passed: false,\n                valid: false\n            },\n        }\n    },\n    task: null,\n    history: null,\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TextField, FormControl, FormControlLabel, Checkbox, FormHelperText } from '@material-ui/core';\nimport { IState, IFunctional, IValidation } from '../../../store/state';\n\ntype FunctionalComponent = React.FC<{\n    functional: IFunctional;\n    validity: IValidation['functionalStep'];\n    updateFunctional: (payload: IFunctional) => void}\n>;\nconst Functional: FunctionalComponent = ({functional, validity, updateFunctional}) => {\n        const handleChange = (key: keyof IFunctional) => (payload: any) => {\n            updateFunctional({\n                ...functional,\n                [key]: payload.target.value\n            });\n        };\n\n        return (\n            <div className=\"column\">\n                <TextField\n                    label=\"Целевая функция\"\n                    error={!validity.valid && validity.passed && !functional.functional}\n                    onChange={handleChange('functional')}\n                    value={functional.functional}\n                />\n                {!validity.valid && validity.passed && !functional.functional && (\n                    <FormHelperText error={true}>Целевая функция должна быть указана</FormHelperText>\n                )}\n                <FormControl>\n                    <FormControlLabel\n                        control={\n                        <Checkbox value={functional.hasIntegralPart} onChange={handleChange('hasIntegralPart')}/>\n                        }\n                        label=\"Есть интегральная часть\"\n                    />\n                </FormControl>\n                <div className=\"row\">\n                    <TextField\n                        label=\"Начальный момент времени\"\n                        onChange={handleChange('t0')}\n                        value={functional.t0}\n                    />\n                    <TextField\n                        label=\"Конечный момент времени\"\n                        onChange={handleChange('T')}\n                        value={functional.T}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n\n\nexport default connect(\n    (state: IState) => ({\n        functional: state.editingTask.functionalStep,\n        validity: state.editingTask.validation.functionalStep\n    }),\n    dispatch => ({\n        updateFunctional: (payload: IFunctional) => dispatch({ type: 'FUNCTIONAL_UPDATE', payload }),\n    })\n)(Functional);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, TextField, FormHelperText, Button, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IState, IFunctional, IValidation, IVariable, IVariableStep } from '../../../store/state';\n\ntype VariablesComponent = React.FC<{\n    functional: IFunctional;\n    variables: IVariableStep;\n    validity: IValidation['variableStep'];\n    addVariable: () => void;\n    updateVariable: (payload: {var: IVariable; index: number}) => void;\n    removeVariable: (payload: number) => () => void;\n}>;\nconst Variables: VariablesComponent = ({functional, variables, validity, addVariable, updateVariable, removeVariable}) => {\n    const handleVarChange = (key: keyof IVariable, i: number) => (payload: any) => updateVariable({\n        var: {\n            ...variables.vars[i],\n            [key]: payload.target.value\n        },\n        index: i\n    });\n    return (\n        <div className=\"column\">\n            {variables.vars.map((variable, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция фазовой переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.f}\n                        onChange={handleVarChange('f', i)}\n                        value={variable.f}\n                    />\n                    {!validity.valid && validity.passed && !variable.f && (\n                        <FormHelperText error={true}>{'Укажите функцию dx' + i + '/dt'}</FormHelperText>\n                    )}\n                    <TextField\n                        label={'Функция сопряженной переменной ' + i}\n                        error={!validity.valid && validity.passed && !variable.p}\n                        onChange={handleVarChange('p', i)}\n                        value={variable.p}\n                    />\n                    {!validity.valid && validity.passed && !variable.p && (\n                        <FormHelperText error={true}>{'Укажите функцию p' + i}</FormHelperText>\n                    )}\n                    <div className=\"row\">\n                        <TextField\n                            label={'Начальной значение фазовой переменной ' + i}\n                            onChange={handleVarChange('xt0', i)}\n                            value={variable.xt0}\n                        />\n                        <TextField\n                            label={'Конечное значение сопряженной переменной ' + i}\n                            onChange={handleVarChange('pT', i)}\n                            value={variable.pT}\n                        />\n                    </div>\n                    <IconButton className=\"close-btn\" onClick={removeVariable(i)} disabled={variables.vars.length === 1}>\n                        <DeleteIcon />\n                    </IconButton>\n                </Paper>\n            ))}\n            <Button onClick={addVariable}>\n                Добавить переменную\n            </Button>\n        </div>\n\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        functional: state.editingTask.functionalStep,\n        variables: state.editingTask.variableStep,\n        validity: state.editingTask.validation.variableStep\n    }),\n    dispatch => ({\n        addVariable: () => dispatch({ type: 'VARIABLE_ADD' }),\n        updateVariable: (payload: {var: IVariable; index: number}) => dispatch({ type: 'VARIABLE_UPDATE', payload }),\n        removeVariable: (payload: number) => () => dispatch({ type: 'VARIABLE_REMOVE', payload }),\n    })\n)(Variables);","import { IManager, IState, IValidation } from '../../../store/state';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Paper, IconButton, Table, TableHead, TableRow, TableCell, TableBody, TextField, FormHelperText, makeStyles } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles(theme => ({\n    tableHeader: {\n        maxWidth: '200px;'\n    },\n    tkField: {\n        maxWidth: '80px',\n        marginLeft: '8px'\n    }\n  }));\n\ntype ManagementType = React.FC<{\n    management: IManager[];\n    validity: IValidation['managementStep'];\n\n    addManager: () => void;\n    updateManager: (key: keyof IManager, i: number) => (payload: any) => void;\n    removeManager: (payload: number) => () => void;\n    updateDudv: (i: number, j: number) => (payload: any) => void;\n    updateV: (i: number, j: number, k: number) => (payload: any) => void;\n    updateTk: (i: number, k: number) => (payload: any) => void;\n\n    addParameter: (i: number) => () => void;\n    removeParameter: (i: number, j: number) => () => void;\n    addTimeSwitcher: (payload: number) => () => void;\n    removeTimeSwitcher: (i: number, j: number) => () => void;\n}>;\nconst Management: ManagementType = ({\n    management, validity,\n    addManager, updateManager, removeManager, updateDudv, updateV, updateTk,\n    addParameter, removeParameter,\n    addTimeSwitcher, removeTimeSwitcher\n}) => {\n    const classes = useStyles();\n    return (\n        <div className=\"column\">\n            {management.map((manager, i) => (\n                <Paper className=\"column Paper\" key={i}>\n                    <TextField\n                        label={'Функция управления ' + i}\n                        error={!validity.valid && validity.passed && !manager.u}\n                        onChange={updateManager('u', i)}\n                        value={manager.u}\n                    />\n                    {!validity.valid && validity.passed && !manager.u && (\n                        <FormHelperText error={true}>Укажите функцию u {i}</FormHelperText>\n                    )}\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {manager.dudv.map((v, j) => (\n                                    <TableCell key={j}>\n                                        <div className={classes.tableHeader + ' row'}>\n                                            <span>V{j}</span>\n                                            <IconButton\n                                                onClick={removeParameter(i, j)}\n                                                disabled={manager.dudv.length === 1}>\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </div>\n                                    </TableCell>\n                                )) }\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    du/dv\n                                </TableCell>\n                                {manager.dudv.map((v, s) => (\n                                    <TableCell key={s}>\n                                        <TextField\n                                            onChange={updateDudv(i, s)}\n                                            error={!validity.valid && validity.passed && !manager.dudv[s]}\n                                            value={v}/>\n                                        {!validity.valid && validity.passed && !manager.dudv[s] && (\n                                            <FormHelperText error={true}>Укажите производную du/dv</FormHelperText>\n                                        )}\n                                    </TableCell>\n                                )) }\n                            </TableRow>\n                            {manager.v.map((row, k) => (\n                                <TableRow key={k}>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                        <IconButton onClick={removeTimeSwitcher(i, k)} disabled={manager.v.length === 1}>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                        <span>\n                                            t{k} - {k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}\n                                        </span>\n                                    </TableCell>\n                                    {row.map((v, s) => (\n                                        <TableCell key={s}>\n                                            <TextField\n                                                type=\"number\"\n                                                label={`Значение v${s} на интервале t${k} - ${k === manager.v.length - 1 ? 'T' : 't' + (k + 1)}`}\n                                                onChange={updateV(i, k, s)}\n                                                value={v}/>\n                                        </TableCell>\n                                    )) }\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n\n                    {!!(manager.tk.length) && (\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell>\n                                        Момент переключения\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {manager.tk.map((t, k) => (\n                                    <TableRow key={k}>\n                                        <TableCell component=\"th\" scope=\"row\" className=\"row\">\n                                            <span>\n                                                {'t' + (k + 1)}\n                                            </span>\n                                        </TableCell>\n                                        <TableCell>\n                                            <TextField\n                                                type=\"number\"\n                                                className={classes.tkField}\n                                                onChange={updateTk(i, k)}\n                                                value={t}/>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    )}\n\n                    <div className=\"row\">\n                        <Button onClick={addTimeSwitcher(i)}>\n                            Добавить момент переключения\n                        </Button>\n                        <Button onClick={addParameter(i)}>\n                            Добавить параметр управления\n                        </Button>\n                    </div>\n\n\n                    {/* <IconButton className=\"close-btn\" onClick={removeManager(i)} disabled={management.length === 1}>\n                        <DeleteIcon />\n                    </IconButton> */}\n                </Paper>\n            ))}\n            {/* <Button onClick={addManager}>\n                Добавить управление\n            </Button> */}\n        </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        management: state.editingTask.managementStep,\n        validity: state.editingTask.validation.managementStep\n    }),\n    dispatch => ({\n        addManager: () => dispatch({ type: 'MANAGER_ADD' }),\n        updateManager: (key: keyof IManager, i: number) => (payload: any) => dispatch({\n            type: 'MANAGER_UPDATE',\n            payload: {\n                key,\n                value: payload.target.value,\n                index: i\n            }\n        }),\n        removeManager: (payload: number) => () => dispatch({ type: 'MANAGER_REMOVE', payload }),\n        updateDudv: (i: number, j: number) => (payload: any) => dispatch({\n            type: 'DUDV_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                dudv: j\n            }\n        }),\n        updateV: (i: number, j: number, k: number) => (payload: any) => dispatch({\n            type: 'V_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: j,\n                v: k\n            }\n        }),\n        updateTk: (i: number, k: number) => (payload: any) => dispatch({\n            type: 'TK_UPDATE',\n            payload: {\n                value: payload.target.value,\n                manager: i,\n                interval: k,\n            }\n        }),\n\n        addParameter: (payload: number) => () => dispatch({ type: 'PARAMETER_ADD', payload }),\n        removeParameter: (i: number, j: number) => () => dispatch({ type: 'PARAMETER_REMOVE', payload: {manager: i, parameter: j} }),\n        addTimeSwitcher: (payload: number) => () => dispatch({ type: 'TIMESWITCHER_ADD', payload }),\n        removeTimeSwitcher: (i: number, j: number) => () => dispatch({ type: 'TIMESWITCHER_REMOVE', payload: {manager: i, timeswitcher: j} }),\n    })\n)(Management);","const Derivatives: React.FC = () => {\n    return null;\n}\n\nexport default Derivatives;","const Method: React.FC = () => {\n    return null;\n}\n\nexport default Method;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { StepButton, StepLabel } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport Functional from './subforms/Functional';\nimport Variables from './subforms/Variables';\nimport Management from './subforms/Management';\nimport Derivatives from './subforms/Derivatives';\nimport Method from './subforms/Method';\nimport { IState, IValidation, TaskStep } from '../../store/state';\nimport { IValidityUpdate } from '../../store/task-reducer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '90%',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction getSteps() {\n  return [\n        {\n            label: 'Целевая функция',\n            content: <Functional/>\n        },\n        {\n            label: 'Фазовые и сопряженные переменные',\n            content: <Variables/>\n        },\n        {\n            label: 'Структура управления',\n            content: <Management/>\n        },\n        {\n            label: 'Производные',\n            content: <Derivatives/>\n        },\n        {\n            label: 'Конфигурация метода',\n            content: <Method/>\n        }\n    ];\n}\n\n\nconst CreateTask: React.FC<{validity: IValidation, updateValidity: (payload: IValidityUpdate) => void, reset: () => void}> =\n({validity, updateValidity, reset}) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(2);\n    const steps = getSteps();\n\n    // Перемещение по шагам\n    const handleStep = (step: number) => () => {\n        if (step !== activeStep) { //validity[TaskStep[index] as keyof IValidation]\n            const validityStep = validity[TaskStep[activeStep] as keyof IValidation];\n            updateValidity({\n                key: TaskStep[activeStep],\n                value: {\n                    ...validityStep,\n                    passed: true\n                }\n            })\n            setActiveStep(step);\n        }\n    };\n    // Сброс формы\n    const handleReset = () => {\n        setActiveStep(0);\n        reset();\n    };\n    const handleRun = () => {};\n    const handleImport = () => {};\n    const handleExport = () => {};\n\n    return (\n      <div className={classes.root}>\n        <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography><span>Пожалуйста, заполните условия задачи или импортируйте из csv.</span></Typography>\n            <Button onClick={handleImport} className={classes.button} disabled={true}>\n                Импорт из csv\n            </Button>\n            <Button onClick={handleExport} className={classes.button} disabled={true}>\n                Экспорт в csv\n            </Button>\n            <Button onClick={handleReset} className={classes.button}>\n                Сбросить\n            </Button>\n            <Button onClick={handleRun} className={classes.button} disabled={true}>\n                Запустить решение\n            </Button>\n        </Paper>\n        <Stepper nonLinear activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((step, index) => {\n              const validityStep = validity[TaskStep[index] as keyof IValidation];\n              return (\n            <Step key={step.label} >\n                <StepButton onClick={handleStep(index)} disableRipple>\n                    <StepLabel error={!validityStep.valid && validityStep.passed}>{step.label}</StepLabel>\n                </StepButton>\n                <StepContent>\n                    {step.content}\n                    <div className={classes.actionsContainer}>\n                        {/* <div>\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleStep(index - 1)}\n                                className={classes.button}\n                            >\n                                Перейти к предыдущему шагу\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleStep(index + 1)}\n                                className={classes.button}\n                                >\n                                {activeStep === steps.length - 1 ? 'Завершить' : 'Перейти к следующему шагу'}\n                            </Button>\n                        </div> */}\n                    </div>\n                </StepContent>\n            </Step>\n          )})}\n        </Stepper>\n        {activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n                <Typography><span>Все данные введены.</span></Typography>\n            </Paper>\n        )}\n      </div>\n    );\n}\n\nexport default connect(\n    (state: IState) => ({\n        validity: state.editingTask.validation\n    }),\n    dispatch => ({\n        updateValidity: (payload: IValidityUpdate) => dispatch({ type: 'VALIDITY_UPDATE', payload }),\n        reset: () => dispatch({ type: 'RESET' }),\n    })\n)(CreateTask);","const History: React.FC = () => {\n    return null;\n}\n\nexport default History;","import React from 'react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport CreateTask from './pages/create-task/CreateTask';\nimport History from './pages/history/History';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div>\n        <div className=\"App-header\">\n          <div className=\"App-header-logo\">\n            <img src=\"/smart-control-logo.png\" alt=\"\"/>\n          </div>\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact className=\"App-link\" activeClassName=\"App-link_active\">Создать задачу</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/history\" className=\"App-link\" activeClassName=\"App-link_active\">История задач</NavLink>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"App-outlet\">\n          <Route exact path=\"/\" component={CreateTask} />\n          {/* <Route path=\"/about\" component={About} /> */}\n          <Route path=\"/topics\" component={History} />\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\nimport { taskReducer } from './task-reducer';\nimport { historyReducer } from './history-reducer';\n\n// const rootReducer = combineReducers({\n//   history: historyReducer,\n//   editingForm: taskReducer\n// });\n\nexport default createStore(taskReducer);\n","import { Reducer } from 'redux';\nimport { IState, IValidation, initialState, IFunctional, IVariable, getEmptyVariable, getEmptyManager } from './state';\n\nexport const taskReducer: Reducer<IState> = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FUNCTIONAL_UPDATE':\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    functionalStep: {\n                        ...action.payload,\n                        t0: action.payload.t0 || 0,\n                        T: action.payload.T || 1,\n                    },\n                    validation: {\n                        ...state.editingTask.validation,\n                        functionalStep: {\n                            ...state.editingTask.validation.functionalStep,\n                            valid: !!((action.payload as IFunctional).functional)\n                        }\n                    }\n                }\n            } as IState;\n        case 'VARIABLE_UPDATE':\n            const updatingVar: {var: IVariable; index: number} = action.payload;\n            const vars = [\n                ...state.editingTask.variableStep.vars.slice(0, updatingVar.index),\n                {\n                    ...updatingVar.var,\n                    t0: action.payload.t0 || 0,\n                    T: action.payload.T || 1,\n                },\n                ...state.editingTask.variableStep.vars.slice(updatingVar.index + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    variableStep: {\n                        vars,\n                    },\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.functionalStep,\n                            valid: vars.every(v => !!(v.f && v.p))\n                        }\n                    }\n                }\n            };\n        case 'VARIABLE_ADD':\n            const allVars = [\n                ...state.editingTask.variableStep.vars,\n                getEmptyVariable(),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    variableStep: {\n                        vars: allVars\n                    },\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.functionalStep,\n                            valid: allVars.every(v => !!(v.f && v.p))\n                        }\n                    }\n                }\n            };\n        case 'VARIABLE_REMOVE':\n            const leftVars = [\n                ...state.editingTask.variableStep.vars.slice(0, action.payload),\n                ...state.editingTask.variableStep.vars.slice(action.payload + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    variableStep: {\n                        vars: leftVars\n                    },\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.functionalStep,\n                            valid: leftVars.every(v => !!(v.f && v.p))\n                        }\n                    }\n                }\n            };\n        case 'MANAGER_ADD':\n            const withNewManager = [\n                ...state.editingTask.managementStep,\n                getEmptyManager()\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withNewManager,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withNewManager.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            };\n        case 'MANAGER_UPDATE':\n            const updatingManager = state.editingTask.managementStep[action.payload.index];\n            const withEdittedManager = [\n                ...state.editingTask.managementStep.slice(0, action.payload.index),\n                {\n                    ...updatingManager,\n                    [action.payload.key]: action.payload.value\n                },\n                ...state.editingTask.managementStep.slice(action.payload.index + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withEdittedManager,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withEdittedManager.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            }\n        case 'MANAGER_REMOVE':\n            const withDelettedManager = state.editingTask.managementStep.filter((m, i) => i !== action.payload.index);\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withDelettedManager,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withDelettedManager.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            }\n        case 'DUDV_UPDATE': {\n            const updatingManager = state.editingTask.managementStep[action.payload.manager];\n            const withEdittedManager = [\n                ...state.editingTask.managementStep.slice(0, action.payload.manager),\n                {\n                    ...updatingManager,\n                    dudv: [\n                        ...updatingManager.dudv.slice(0, action.payload.dudv),\n                        action.payload.value,\n                        ...updatingManager.dudv.slice(action.payload.dudv + 1),\n                    ]\n                },\n                ...state.editingTask.managementStep.slice(action.payload.manager + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withEdittedManager,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withEdittedManager.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            }\n        }\n        case 'V_UPDATE': {\n            const updatingManager = state.editingTask.managementStep[action.payload.manager];\n            const withEdittedManager = [\n                ...state.editingTask.managementStep.slice(0, action.payload.manager),\n                {\n                    ...updatingManager,\n                    v: [\n                        ...updatingManager.v.slice(0, action.payload.interval),\n                        [\n                            ...updatingManager.v[action.payload.interval].slice(0, action.payload.v),\n                            action.payload.value || 0,\n                            ...updatingManager.v[action.payload.interval].slice(action.payload.v + 1),\n                        ],\n                        ...updatingManager.v.slice(action.payload.interval + 1),\n                    ]\n                },\n                ...state.editingTask.managementStep.slice(action.payload.manager + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withEdittedManager,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withEdittedManager.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            }\n        }\n        case 'TK_UPDATE': {\n            const updatingManager = state.editingTask.managementStep[action.payload.manager];\n            const withEdittedManager = [\n                ...state.editingTask.managementStep.slice(0, action.payload.manager),\n                {\n                    ...updatingManager,\n                    tk: [\n                        ...updatingManager.tk.slice(0, action.payload.interval),\n                        action.payload.value || 0,\n                        ...updatingManager.tk.slice(action.payload.interval + 1),\n                    ]\n                },\n                ...state.editingTask.managementStep.slice(action.payload.manager + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withEdittedManager,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withEdittedManager.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            }\n        }\n        case 'PARAMETER_ADD':\n            const managerWithNewParameter = state.editingTask.managementStep[action.payload];\n            const withNewParametr = [\n                ...state.editingTask.managementStep.slice(0, action.payload),\n                {\n                    ...managerWithNewParameter,\n                    v: managerWithNewParameter.v.map(interval => [...interval, 0]),\n                    dudv: [...managerWithNewParameter.dudv, '']\n                },\n                ...state.editingTask.managementStep.slice(action.payload + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withNewParametr,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withNewParametr.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            };\n        case 'PARAMETER_REMOVE':\n            const managerWithDelettingParameter = state.editingTask.managementStep[action.payload.manager];\n            const withDeletedParameter = [\n                ...state.editingTask.managementStep.slice(0, action.payload.manager),\n                {\n                    ...managerWithDelettingParameter,\n                    v: managerWithDelettingParameter.v.map(interval => interval.filter((v, i) => i !== action.payload.parameter)),\n                    dudv: managerWithDelettingParameter.dudv.filter((v, i) => i !== action.payload.parameter)\n                },\n                ...state.editingTask.managementStep.slice(action.payload.manager + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withDeletedParameter,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withDeletedParameter.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            };\n        case 'TIMESWITCHER_ADD':\n            const mangerWithNewTimeSwitcher = state.editingTask.managementStep[action.payload];\n            const withNewTimeSwitcher = [\n                ...state.editingTask.managementStep.slice(0, action.payload),\n                {\n                    ...mangerWithNewTimeSwitcher,\n                    v: [...mangerWithNewTimeSwitcher.v, Array(mangerWithNewTimeSwitcher.dudv.length).fill(0)],\n                    tk: [...mangerWithNewTimeSwitcher.tk, 0]\n                },\n                ...state.editingTask.managementStep.slice(action.payload + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withNewTimeSwitcher,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withNewTimeSwitcher.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            };\n        case 'TIMESWITCHER_REMOVE':\n            const managerWithDelettingTimeSwitcher = state.editingTask.managementStep[action.payload.manager];\n            const withDeletedTimeSwitcher = [\n                ...state.editingTask.managementStep.slice(0, action.payload.manager),\n                {\n                    ...managerWithDelettingTimeSwitcher,\n                    v: managerWithDelettingTimeSwitcher.v.filter((interval, i) => i !== action.payload.timeswitcher),\n                    tk: managerWithDelettingTimeSwitcher.tk.slice(0, managerWithDelettingTimeSwitcher.tk.length - 1)\n                },\n                ...state.editingTask.managementStep.slice(action.payload.manager + 1),\n            ];\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    managementStep: withDeletedTimeSwitcher,\n                    validation: {\n                        ...state.editingTask.validation,\n                        variableStep: {\n                            ...state.editingTask.validation.managementStep,\n                            valid: withDeletedTimeSwitcher.every(m => !!(\n                                m.u && m.dudv.every(Boolean)\n                            ))\n                        }\n                    }\n                }\n            };\n        case 'VALIDITY_UPDATE':\n            const payload = action.payload as IValidityUpdate;\n            return {\n                ...state,\n                editingTask: {\n                    ...state.editingTask,\n                    validation: {\n                        ...state.editingTask.validation,\n                        [payload.key]: payload.value\n                    }\n                }\n            } as IState;\n        case 'RESET':\n            return {\n                ...state,\n                editingTask: initialState.editingTask\n            } as IState;\n    }\n    return state;\n};\n\nexport interface IValidityUpdate {\n    key: string;\n    value: IState['editingTask']['validation'][keyof IValidation];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}